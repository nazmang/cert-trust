name: Release

on:
  push:
    tags:
      - "v*"
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: "v3.12.0"

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o bin/manager ./cmd/cert-trust

      - name: Build Docker image
        run: |
          docker build -t cert-trust:${{ steps.version.outputs.version }} .
          docker tag cert-trust:${{ steps.version.outputs.version }} cert-trust:latest

      - name: Update Chart version
        run: |
          sed -i "s/^version: .*/version: ${{ steps.version.outputs.version }}/" charts/cert-trust/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: \"${{ steps.version.outputs.version }}\"/" charts/cert-trust/Chart.yaml
          sed -i "s/tag: .*/tag: \"${{ steps.version.outputs.version }}\"/" charts/cert-trust/values.yaml

      - name: Package Helm chart
        run: |
          helm package charts/cert-trust --destination ./dist
          helm repo index ./dist --url https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tgz
            dist/index.yaml
          name: Release v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          body: |
            ## Changes in v${{ steps.version.outputs.version }}

            ### Installation
            ```bash
            # Add the repository
            helm repo add cert-trust https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}
            helm repo update

            # Install the chart
            helm install cert-trust cert-trust/cert-trust -n cert-trust --create-namespace
            ```

            ### Files
            - `cert-trust-${{ steps.version.outputs.version }}.tgz` - Helm chart package
            - `index.yaml` - Helm repository index
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/cert-trust:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.actor }}/cert-trust:latest
          platforms: linux/amd64,linux/arm64

  master-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o bin/manager ./cmd/cert-trust

      - name: Test build
        run: |
          ./bin/manager --help || true
